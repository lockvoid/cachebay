service: live

image: ghcr.io/lockvoid/live

servers:
  web:
    - 64.23.128.16
  # job:
  #   hosts:
  #     - 192.168.0.1
  #   cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: harrypotterdemo.exp.lockvoid.com
  app_port: 3000

registry:
  server: ghcr.io
  username: lockvoid
  password: <%= ENV["GHCR_PAT"] %>

builder:
  arch: amd64

env:
  PORT: "3000"

volumes:
  - "/home/deploy/live/data:/app/data:rw"

ssh:
  keys: [ ".ssh/id.pem" ]

# Inject ENV variables into containers (secrets come from .kamal/secrets).
#
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal app logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
#
# volumes:
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Use accessory services (secrets come from .kamal/secrets).
#
accessories:
  cron:
    image: alpine:latest
    host: 64.23.128.16
    cmd: sh -c "echo '0 2 * * * docker exec $$(docker ps -q --filter label=service=live) /app/reset-db.sh' | crontab - && crond -f -l 2"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
